/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

  import { Contract, Interface, type ContractRunner } from "ethers";
  import type { IALFAReferral, IALFAReferralInterface } from "../../../referral/interfaces/IALFAReferral.js";

  const _abi = [
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "percents",
        "type": "uint256[]"
      }
    ],
    "name": "PercentsSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "parent",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "child",
        "type": "address"
      }
    ],
    "name": "RelationAdded",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "parent",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "child",
        "type": "address"
      }
    ],
    "name": "RelationRemoved",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "parentAddress",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "childAddress",
        "type": "address"
      }
    ],
    "name": "addRelation",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "parentAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "offset",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "limit",
        "type": "uint256"
      }
    ],
    "name": "getChildren",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "parentAddress",
        "type": "address"
      }
    ],
    "name": "getChildrenCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "childAddress",
        "type": "address"
      }
    ],
    "name": "getParent",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getPercents",
    "outputs": [
      {
        "internalType": "uint256[]",
        "name": "",
        "type": "uint256[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "childAddress",
        "type": "address"
      }
    ],
    "name": "getReferralPercents",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "parentAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "percents",
            "type": "uint256"
          }
        ],
        "internalType": "struct ReferralPercents[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address[]",
        "name": "sequence",
        "type": "address[]"
      }
    ],
    "name": "setSequence",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  export class IALFAReferral__factory {
    static readonly abi = _abi;
    static createInterface(): IALFAReferralInterface {
      return new Interface(_abi) as IALFAReferralInterface;
    }
    static connect(address: string, runner?: ContractRunner | null): IALFAReferral {
      return new Contract(address, _abi, runner) as unknown as IALFAReferral;
    }
  }
  